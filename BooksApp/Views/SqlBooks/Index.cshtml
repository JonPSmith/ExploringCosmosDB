@using BookApp.UI.HelperExtensions
@using CommonServiceLayer
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model SqlServiceLayer.BookListCombinedDto
@{
    ViewData["Title"] = "SQL server version";
}

<p><span class="text-primary h2">SQL server version</span></p>

<form id="sort-filter-form" role="form">
    <div class="row">
        <div class="col-sm-3">
            <label>Sort By</label>
            <select asp-for="SortFilterPageData" name="OrderByOptions"
                    asp-items="Html.GetEnumSelectList<OrderByOptions>()"
                    class="form-control sort-filter-width"
                    onchange="BookList.sendForm(this)"></select>
        </div>

        <div class="col-sm-3">
            <label>Filter Type</label>
            <select asp-for="SortFilterPageData.FilterBy" name="FilterBy"
                    asp-items="Html.GetEnumSelectList<BooksFilterBy>()"
                    class="form-control sort-filter-width"
                    onchange="BookList.filterByHasChanged(this)"></select>
        </div>
        

        <div class="col-sm-3 dim-filter-value" id="filter-value-group">
            <label>Filter By</label>
            <select asp-for="SortFilterPageData.FilterValue" name="FilterValue"
                    id="filter-value-dropdown"
                    class="form-control sort-filter-width"
                    onchange="BookList.sendForm(this)">
                <option>Select filter type...</option>
            </select>
        </div>

        <div class="col-sm-2">
            <label>Page</label>
            <div>
                <input asp-for="SortFilterPageData.PageNum" name="PageNum"
                       class="form-control page-control-width page-num-input"
                       onchange="BookList.sendForm(this)">
                <span class="num-pages-text">of @Model.SortFilterPageData.NumPages</span>
            </div>
        </div>

        <div class="col-sm-1">
            <label>Page&nbsp;Size</label>
            <select asp-for="SortFilterPageData.PageSize" name="PageSize"
                    asp-items="Model.SortFilterPageData.PageSizes.Select(x => new SelectListItem {Text = x.ToString(), Value = x.ToString()})"
                    class="form-control page-control-width"
                    onchange="BookList.sendForm(this)"></select>
        </div>
    </div>

    <input id="PrevCheckState" name="PrevCheckState" type="hidden" value=@Model.SortFilterPageData.PrevCheckState>
</form>
<br />

<table class="table">
    @foreach (var item in Model.BooksList)
    {
        <tr>
            <td>
                <p>
                    <span class="h3"><a asp-controller="SqlBooks" asp-action="Detail" asp-route-id="@item.BookId">@item.Title</a></span><span>&nbsp;click to see more...</span>
                </p>
                <div>
                    <small>by</small>&nbsp;@Html.DisplayFor(m => item.AuthorsOrdered)
                </div>
                <div>
                    Published on @item.PublishedOn.ToString("d")
                </div>
                <div>
                    Tags: @string.Join(" | ", item.TagStrings)
                </div>
                <div>
                    @(item.ReviewsCount == 0 ? "Be the first to review this book" : $"Votes: {item.ReviewsAverageVotes:F1} by {item.ReviewsCount} customers")
                </div>
                <div>
                    <span class="h4">@(item.ActualPrice < 0 ? "- not for sale - " : $"Price: ${item.ActualPrice:F}")</span>
                    @if (item.PromotionText != null)
                    {
                        <span class="text-danger">
                            <strong>&nbsp;<del>$@($"{item.OrgPrice:F}")</del>&nbsp;<i>@(item.PromotionText)</i></strong>
                        </span>
                    }
                </div>
            </td>
            <td class="vert-align">
                @if (Context.Request.IsLocal())
                {
                    <div class="dropdown">
                        <button type="button" class="btn btn-light dropdown-toggle" id="dropdownMenu2" data-toggle="dropdown">
                            Admin
                        </button>
                        @*<div class="dropdown-menu">
                            @if (item.PromotionText == null)
                            {
                                <a class="dropdown-item" asp-area="" asp-controller="Admin" asp-action="AddPromotion" asp-route-id="@item.BookId">Add Promotion</a>
                            }
                            else
                            {
                                <a class="dropdown-item" asp-area="" asp-controller="Admin" asp-action="RemovePromotion" asp-route-id="@item.BookId">Remove Promotion</a>
                            }
                            <a class="dropdown-item" asp-area="" asp-controller="Admin" asp-action="AddBookReview" asp-route-id="@item.BookId">Add Review</a>
                        </div>*@
                    </div>
                }
            </td>
        </tr>
    }
</table>

@section Scripts {

    <script type='text/javascript'>
        document.addEventListener("DOMContentLoaded",
            function(event) {
                BookList.initialise('@Model.SortFilterPageData.FilterBy', '@Model.SortFilterPageData.FilterValue',
                    '@Url.Action("GetFilterSearchContent")');
            });
    </script>
}